{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Dialogs/AddMessageForm.jsx/AddMessageForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","React","memo","postsElements","posts","map","p","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","styles","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.e73e40d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1P_0r\",\"posts\":\"MyPosts_posts__O4age\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__YQP0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1mDG0\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (          \r\n    <div className={s.item}>\r\n      <img src='https://econet.ru/uploads/pictures/456173/content_199820.jpg' alt=''/>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from './../../common/FormsControls/FormsControls';\r\nimport { required } from './../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newPostText\"\r\n                validate={[required, maxLength10]}\r\n            />            \r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )    \r\n}\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddNewPostForm);  ;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport AddNewPostForm from './../../Dialogs/AddMessageForm.jsx/AddMessageForm';\r\n\r\nconst MyPosts = React.memo((props) => {    \r\n    let postsElements = props.posts.map(p =>\r\n        <Post\r\n            key={p.id}\r\n            message={p.message}\r\n            likesCount={p.likesCount}\r\n        />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostForm onSubmit={onAddPost} />\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","//import React from 'react';\r\nimport { addPostActionCreator } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts        \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n           dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value) \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span\r\n                        onDoubleClick={activateEditMode}\r\n                    >\r\n                        {props.status || \"------\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        value={status}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/preloader/Preloader';\r\n//import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    return (\r\n        <div>           \r\n            <div className={styles.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=''/>\r\n                <ProfileStatusWithHooks \r\n                    status={status}\r\n                    updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n//import s from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}